{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React Projects\\\\crwn-clothing\\\\src\\\\pages\\\\Shoppage\\\\Shoppage.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionPage from \"../Collection/Collection\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/WithSpinner/WithSpinner\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    fetch(`\n    https://firestore.googleapis.com/v1/projects/crwn-db-99083/databases/(default)/documents/collections`).then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then((snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Projects/React Projects/crwn-clothing/src/pages/Shoppage/Shoppage.jsx"],"names":["React","Component","Route","connect","CollectionPage","updateCollections","withSpinner","CollectionsOverview","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMI,0BAA0B,GAAGL,WAAW,CAACF,cAAD,CAA9C;;AAEA,MAAMQ,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BY,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAK/BC,uBAL+B,GAKL,IALK;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAE;yGAAF,CAAL,CAEGC,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAFtB,EAGGF,IAHH,CAGSG,WAAD,IAAiBC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAHzB,EAJkB,CASlB;AACA;AACA;AACA;AACA;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGZ,KAAD,iBACN,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGZ,KAAD,iBACN,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEH;AAAvC,SAAoDG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA3C8B;;AA8CjC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxC1B,EAAAA,iBAAiB,EAAG2B,cAAD,IACjBD,QAAQ,CAAC1B,iBAAiB,CAAC2B,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionPage from \"../Collection/Collection\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\nimport withSpinner from \"../../components/WithSpinner/WithSpinner\";\r\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = withSpinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n  state = {\r\n    loading: true,\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    fetch(`\r\n    https://firestore.googleapis.com/v1/projects/crwn-db-99083/databases/(default)/documents/collections`)\r\n      .then((response) => response.json())\r\n      .then((collections) => console.log(collections));\r\n\r\n    // collectionRef.get().then((snapshot) => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading: false });\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionsPageWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}