{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am invoked');\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["D:/Projects/React Projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,UAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACM,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACD,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIR,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH1B;AAID;AAED,OAAO,UAAUT,qBAAV,GAAkC;AACvC,QAAMV,SAAS,CACbG,eAAe,CAACiB,uBADH,EAEbhB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am invoked');\r\n\r\n  const collectionRef = firestore.collection(\"collections\");\r\n  dispatch(fetchCollectionsStart());\r\n\r\n  collectionRef.get().then((snapshot) => {\r\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}