{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});","map":{"version":3,"sources":["D:/Projects/React Projects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_SUCCESS","payload","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AAEAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACO,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIT,QAAQ,CAACU,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH1B;AAID,GARD;AASD,CAVM;AAYP,OAAO,MAAMJ,uBAAuB,GAAGD,cAAc,KAAK;AACxDT,EAAAA,IAAI,EAAEJ,eAAe,CAACmB,yBADkC;AAExDC,EAAAA,OAAO,EAAEP;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMI,uBAAuB,GAAGI,YAAY,KAAK;AACtDjB,EAAAA,IAAI,EAAEJ,eAAe,CAACsB,yBADgC;AAEtDF,EAAAA,OAAO,EAAEC;AAF6C,CAAL,CAA5C","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef.get().then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  }\r\n}\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage\r\n});"]},"metadata":{},"sourceType":"module"}