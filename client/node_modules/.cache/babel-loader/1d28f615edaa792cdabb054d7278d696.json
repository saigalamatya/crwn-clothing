{"ast":null,"code":"import firebase from 'firebase';\nconst config = {\n  apiKey: \"AIzaSyAZNXApOspKZLkSU9XOzoU9fkke9vBP9h0\",\n  authDomain: \"crwn-db-99083.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-99083.firebaseio.com\",\n  projectId: \"crwn-db-99083\",\n  storageBucket: \"crwn-db-99083.appspot.com\",\n  messagingSenderId: \"675554235470\",\n  appId: \"1:675554235470:web:6e9cb87860d3530102df1f\",\n  measurementId: \"G-BP4F2EJN2F\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/213123asdas`);\n  console.log(userRef);\n  const snapShot = await userRef.get(); // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     })\n  //   } catch (error) {\n  //     console.log('error creating user', error.message);\n  //   }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/Projects/React Projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,mBAAf,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB,CAR2E,CAU3E;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAON,OAAP;AACD,CA3BM;AA6BPb,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AAEA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAZNXApOspKZLkSU9XOzoU9fkke9vBP9h0\",\r\n  authDomain: \"crwn-db-99083.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-99083.firebaseio.com\",\r\n  projectId: \"crwn-db-99083\",\r\n  storageBucket: \"crwn-db-99083.appspot.com\",\r\n  messagingSenderId: \"675554235470\",\r\n  appId: \"1:675554235470:web:6e9cb87860d3530102df1f\",\r\n  measurementId: \"G-BP4F2EJN2F\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) {\r\n    return;\r\n  }\r\n\r\n  const userRef = firestore.doc(`users/213123asdas`);\r\n  console.log(userRef)\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  // if (!snapShot.exists) {\r\n  //   const { displayName, email } = userAuth;\r\n  //   const createdAt = new Date();\r\n\r\n  //   try {\r\n  //     await userRef.set({\r\n  //       displayName,\r\n  //       email,\r\n  //       createdAt,\r\n  //       ...additionalData\r\n  //     })\r\n  //   } catch (error) {\r\n  //     console.log('error creating user', error.message);\r\n  //   }\r\n  // }\r\n\r\n  return userRef;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}